
/*
Simple selectors select all elements based on element type, class, or ID;
for instance: a (element selector), #my-element (ID selector), and .my-element (class selector).

Multiple selectors, much like the name implies, are simply multiple selectors attached to the same CSS rule, separated by commas;
for instance: .button, .button__primary, .button__secondary {}.

Attribute selectors select all elements based on their HTML attributes/attribute values.
For instance, if you had a text input element, you could select it with input[type=”text”].

Pseudo-classes select all elements that exist in a certain state, such as an element that’s being hovered over by the mouse pointer,
a checkbox that’s currently disabled or checked, or an element that’s the first child of its parent in the DOM tree (the DOM is something you’ll learn about with more advanced coding).
You already used a pseudo-class selector earlier in this Exercise when styling the hover state of your links—--a:hover.

Pseudo-elements select all parts of content that are in a certain position in relation to an element.
To select the first element of a list, for example, you could use li:first-child.

Combinators aren’t exactly selectors themselves, rather, ways of combining two or more selectors in useful ways for very specific selections.
For example, you could select only paragraphs that come directly after headings to give them more spacing by using the selector h1 + paragraph.

*/

/* Colors used

Background (Navy blue): #39395f
Text color (white): #9cf3dd
Text color alt :#fff
Important Text and buttons (bluish Green): #9cf3dd
*/

:root{
  --primary-color: #fff;
  --alt-color:#bdc0d3;
  --Special-color:#9cf3dd;
  --Font-bold: 700;
}


body {/* ALWAYS start general when styling */
  background-color: #39395f;/*-- Navy blue */
  font-family: 'Lato', sans-serif;
  font-weight: 400; /* regular version of the font*/
  font-size: 16px;
  /*font size to 16px */
  line-height:1.6;
  /*Sets the line-height to 1.6 */
}

h1{
  color: var(--primary-color);
  font-size: 30px;
  font-weight: var(--font-bold);/* Bolds version of the font*/
}

h2{
  font-size: 24px;
  font-weight: var(--font-bold);
}

h3{
  font-size:18px;
  font-weight: var(--font-bold);
}

p {
  color: var(--alt-color);
}
a{
  color:var(--primary-color);
}

a:visited {
  /* visited link */
  color: #05676e;
}

a:hover, a:focus { /* hover must come after visted to be effective */ /* focus is a pseudo-class applied for users using keyboard */
  /*No underlining when hovering over a link */
  text-decoration: none;
}

a:active {
  /* selected link */
  color: #489c79;
}

.button, button {
  /* overwrites browser defaults and resets the border */
  border: none;
  display: inline-block;
  /* takes the font from the outer container */
  font-family: inherit;
  /* styles the background color, font color, and text decoration (underline, etc.) of the button */
  background-color: inherit;
  color: #9cf3dd;
  text-decoration: none;
  /*adds spacing to the button (this will be discussed more in-depth later) */
  padding: 10px;
  border-radius: 3px;
  /* gives the button a bottom border with a width of 2px, a type of solid, and a color in RGBA format */
  border: .1px solid;
  transition: 0.2s opacity; /* transition: [transition-property] [transition-duration] [transition-timing-function] [transition-delay] */

}

button:hover, button:focus, .button:hover, .button:focus {
  /* lets the mouse appear as a hand when hovering over the button */
  cursor: pointer;
  /* reduces the opacity of the button to 80% */
  opacity: 0.8;
}


.navigation-list__item--active { /* Block Element Modifier used on the navigation */
  text-decoration: none;
}

.profile__protrait{
  float: left; /* Will put the image on the left and wrap other elements around it */
  width: 250px;
  height: auto;
  margin-right: 40px;
  border-radius: 50%;
}

.page-footer{
  clear: both; /* Clears all floats both right and left */
  display: flex; /* creates a Flexbox */
  flex-direction: column; /*changes layout of the items in the flex box, can also be reversed" */
  padding: 20px;
  text-align: center; /* use text-align on flexboxes */
}


.profile {
  max-width: 700px; /* won't exceed 700 pixels */
  margin: 0 auto; /* centers the profile class */
}

.about {
  text-align: center;
  margin-left: auto;
  margin-right: auto;
}
.about-list__item {
  list-style-type: none;
  margin-left: auto;
  margin-right: auto;
}
#experience-table {
  margin-left: auto;/* centers table */
  margin-right: auto;
}
* {
  box-sizing: border-box; /* Forces the padding and border to be included in the final specified width */
}

.page-header{
  display: flex;
  width: 100%;
  padding: 20px;
}

.page-header__item {
  flex: 0 1 200px; /* flex-grow, flex-shrink, flex-basis */
}

.page-header__item:last-child{
  flex-grow: 1;
  text-align: right;
}

.page-header__item-logo {
  max-width: 200px;
}
.navigation-list {
  list-style-type: none;/*removes dots from navigation */
}

.navigation-list li {
  display: inline-block; /* aligns items in a row */
  margin-left: 15px;
}

#first-line {
  color: #9cf3dd
}

/*Grid fallback */
.project-list__item{
  display: inline-block;
  width: 33%;
}
/* end of fallback*/

@supports (display: grid) {

  .project-list {
    display: grid; /* as name implies it creates a grid for you to display your work */
    grid-template-columns: 1fr 1fr 1fr;/* it's considered best practice to only use one property (columns), using fr will automatically allocate available space to grid items*/
    grid-gap: 20px;
    margin:0;

  }

  .project-list__item{
    background-color: lightgray;
    width: auto;
    min-height: auto;
    border-radius: 5%;
    margin: 0;
  }
}

@media all and (max-width: 500px) {/* can also be screen, print, and speech. All encompasses all of these *//* This specific one changes the 3-colum grid to a 1-column grid */
  .project-list {
    grid-template-columns: 1fr;
  }
}
@media all and (min-width: 500px) and (max-width: 750px){
  .project-list {
    grid-template-columns: 1fr 1fr;
  }
}
@media all and (max-width: 750px) {
  /* shared code */
  .project-list {
    grid-gap: 10px;
  }
  .project-list__item:last-child {
    grid-column: auto / auto;
    grid-row: auto / auto;
  }
  h1 {
    font-size: 22px;
  }
}

@keyframes color-change { /* animation */
  0% {
    fill: #edc655;
  }
  50% {
    fill: #fcffad;
  }
  100% {
    fill: #f76414;
  }
}
.sun {
  animation: 4s color-change infinite alternate linear;
}

@keyframes cloud-move { /* moves element */
  from {
    transform: translate(0, 50px);
  }
  to {
    transform: translate(200px, 50px);
  }
}
.cloud-front {
animation: 20s cloud-move infinite alternate linear; /* duration, name, iteration-count, direction, timing-function */
}

@keyframes cloud-move-reverse {
  from {
    transform: translate(446px, 48px);
  }
  to {
    transform: translate(100px, 48px);
  }
}

.cloud-back {
  animation: 34s cloud-move-reverse infinite alternate linear;
  background-color: inherit;
}
